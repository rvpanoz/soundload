{"version":3,"file":"nsis.js","sourceRoot":"","sources":["../../../../../src/targets/nsis/nsis.ts"],"names":[],"mappings":"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","sourcesContent":["import { path7za } from \"7zip-bin\"\nimport BluebirdPromise from \"bluebird-lst\"\nimport _debug from \"debug\"\nimport { Arch, asArray, debug7zArgs, doSpawn, execWine, getPlatformIconFileName, handleProcess, isEmptyOrSpaces, log, spawn, use, warn } from \"electron-builder-util\"\nimport { getBinFromGithub } from \"electron-builder-util/out/binDownload\"\nimport { copyFile } from \"electron-builder-util/out/fs\"\nimport { readFile, writeFile } from \"fs-extra-p\"\nimport * as path from \"path\"\nimport sanitizeFileName from \"sanitize-filename\"\nimport { v5 as uuid5 } from \"uuid-1345\"\nimport { Target } from \"../../core\"\nimport { normalizeExt } from \"../../platformPackager\"\nimport { AsyncTaskManager } from \"../../util/asyncTaskManager\"\nimport { time } from \"../../util/timer\"\nimport { WinPackager } from \"../../winPackager\"\nimport { addZipArgs, archive, ArchiveOptions } from \"../archive\"\nimport { computeBlockMap } from \"../blockMap\"\nimport { computeLicensePage } from \"./nsisLicense\"\nimport { NsisOptions, PortableOptions } from \"./nsisOptions\"\nimport { addCustomMessageFileInclude, AppPackageHelper, nsisTemplatesDir } from \"./nsisUtil\"\nimport { NsisScriptGenerator } from \"./nsisScriptGenerator\"\nimport { statOrNull } from \"../../../../electron-builder-util/src/fs\"\n\nconst debug = _debug(\"electron-builder:nsis\")\n\n// noinspection SpellCheckingInspection\nconst ELECTRON_BUILDER_NS_UUID = \"50e065bc-3134-11e6-9bab-38c9862bdaf3\"\n\n// noinspection SpellCheckingInspection\nconst nsisPathPromise = getBinFromGithub(\"nsis\", \"3.0.1.13\", \"2921dd404ce9b69679088a6f1409a56dd360da2077fe1019573c0712c9edf057\")\n// noinspection SpellCheckingInspection\nconst nsisResourcePathPromise = getBinFromGithub(\"nsis-resources\", \"3.1.0\", \"/QBlR/F8AAGInT/eQQ0eJNSF0RFR11g+L54WWViDYTgBHwTIlkcqBHgvNDKO6LQODtqOm9N2nG2AxK7UZT5bOg==\")\n\nconst USE_NSIS_BUILT_IN_COMPRESSOR = false\n\nexport class NsisTarget extends Target {\n  readonly options: NsisOptions\n\n  /** @private */\n  readonly archs: Map<Arch, string> = new Map()\n\n  constructor(protected readonly packager: WinPackager, readonly outDir: string, targetName: string, protected readonly packageHelper: AppPackageHelper) {\n    super(targetName)\n\n    this.packageHelper.refCount++\n\n    this.options = targetName === \"portable\" ? Object.create(null) : {...this.packager.config.nsis}\n    if (targetName !== \"nsis\") {\n      Object.assign(this.options, (this.packager.config as any)[targetName === \"nsis-web\" ? \"nsisWeb\" : targetName])\n    }\n\n    const deps = packager.info.metadata.dependencies\n    if (deps != null && deps[\"electron-squirrel-startup\"] != null) {\n      warn('\"electron-squirrel-startup\" dependency is not required for NSIS')\n    }\n  }\n\n  async build(appOutDir: string, arch: Arch) {\n    this.archs.set(arch, appOutDir)\n  }\n\n  /** @private */\n  async buildAppPackage(appOutDir: string, arch: Arch) {\n    const options = this.options\n    const packager = this.packager\n\n    let isPackElevateHelper = options.packElevateHelper\n    if (isPackElevateHelper === false && options.perMachine === true) {\n      isPackElevateHelper = true\n      warn(\"`packElevateHelper = false` is ignored, because `perMachine` is set to `true`\")\n    }\n\n    if (isPackElevateHelper !== false) {\n      await copyFile(path.join(await nsisPathPromise, \"elevate.exe\"), path.join(appOutDir, \"resources\", \"elevate.exe\"), false)\n    }\n\n    const isDifferentialPackage = options.differentialPackage\n    const format = isDifferentialPackage || options.useZip ? \"zip\" : \"7z\"\n    const archiveFile = path.join(this.outDir, `${packager.appInfo.name}-${packager.appInfo.version}-${Arch[arch]}.nsis.${format}`)\n    const archiveOptions: ArchiveOptions = {withoutDir: true, solid: !isDifferentialPackage}\n    let compression = packager.config.compression\n\n    const timer = time(`nsis package, ${Arch[arch]}`)\n    if (isDifferentialPackage) {\n      // reduce dict size to avoid large block invalidation on change\n      archiveOptions.dictSize = 16\n      archiveOptions.method = \"LZMA\"\n      // do not allow to change compression level to avoid different packages\n      compression = null\n    }\n    await archive(compression, format, archiveFile, appOutDir, archiveOptions)\n    timer.end()\n\n    if (options.differentialPackage) {\n      const args = debug7zArgs(\"a\")\n      addZipArgs(args)\n      args.push(`-mm=${archiveOptions.method}`, \"-mx=9\")\n      args.push(archiveFile)\n\n      const blockMap = await computeBlockMap(appOutDir)\n      const blockMapFile = path.join(this.outDir, `${packager.appInfo.name}-${packager.appInfo.version}-${Arch[arch]}.blockMap.yml`)\n      await writeFile(blockMapFile, blockMap)\n      await spawn(path7za, args.concat(blockMapFile), {\n        cwd: this.outDir,\n      })\n    }\n\n    return archiveFile\n  }\n\n  // noinspection JSUnusedGlobalSymbols\n  async finishBuild(): Promise<any> {\n    log(\"Building NSIS installer\")\n    try {\n      await this.buildInstaller()\n    }\n    finally {\n      await this.packageHelper.finishBuild()\n    }\n  }\n\n  protected get installerFilenamePattern(): string {\n    // tslint:disable:no-invalid-template-strings\n    return \"${productName} \" + (this.isPortable ? \"\" : \"Setup \") + \"${version}.${ext}\"\n  }\n\n  private get isPortable() {\n    return this.name === \"portable\"\n  }\n\n  private async buildInstaller(): Promise<any> {\n    const isPortable = this.isPortable\n\n    const packager = this.packager\n    const appInfo = packager.appInfo\n    const version = appInfo.version\n    const options = this.options\n    const installerFilename = packager.expandArtifactNamePattern(options, \"exe\", null, this.installerFilenamePattern)\n    const iconPath = (isPortable ? null : await packager.getResource(options.installerIcon, \"installerIcon.ico\")) || await packager.getIconPath()\n    const oneClick = options.oneClick !== false\n\n    const installerPath = path.join(this.outDir, installerFilename)\n    const guid = options.guid || await BluebirdPromise.promisify(uuid5)({namespace: ELECTRON_BUILDER_NS_UUID, name: appInfo.id})\n    const companyName = appInfo.companyName\n    const defines: any = {\n      APP_ID: appInfo.id,\n      APP_GUID: guid,\n      PRODUCT_NAME: appInfo.productName,\n      PRODUCT_FILENAME: appInfo.productFilename,\n      APP_FILENAME: (!oneClick || options.perMachine === true) && /^[-_+0-9a-zA-Z ]+$/.test(appInfo.productFilename) ? appInfo.productFilename : appInfo.name,\n      APP_DESCRIPTION: appInfo.description,\n      VERSION: version,\n\n      PROJECT_DIR: packager.projectDir,\n      BUILD_RESOURCES_DIR: packager.buildResourcesDir,\n    }\n\n    if (companyName != null) {\n      defines.COMPANY_NAME = companyName\n    }\n\n    // electron uses product file name as app data, define it as well to remove on uninstall\n    if (defines.APP_FILENAME !== appInfo.productFilename) {\n      defines.APP_PRODUCT_FILENAME = appInfo.productFilename\n    }\n\n    const commands: any = {\n      OutFile: `\"${installerPath}\"`,\n      VIProductVersion: appInfo.versionInWeirdWindowsForm,\n      VIAddVersionKey: this.computeVersionKey(),\n      Unicode: this.isUnicodeEnabled,\n    }\n\n    if (iconPath != null) {\n      if (isPortable) {\n        commands.Icon = `\"${iconPath}\"`\n      }\n      else {\n        defines.MUI_ICON = iconPath\n        defines.MUI_UNICON = iconPath\n      }\n    }\n\n    if (this.archs.size === 1 && USE_NSIS_BUILT_IN_COMPRESSOR) {\n      defines.APP_BUILD_DIR = this.archs.get(this.archs.keys().next().value)\n    }\n    else {\n      await BluebirdPromise.map(this.archs.keys(), async arch => {\n        const file = await this.packageHelper.packArch(arch, this)\n        defines[arch === Arch.x64 ? \"APP_64\" : \"APP_32\"] = file\n        defines[(arch === Arch.x64 ? \"APP_64\" : \"APP_32\") + \"_NAME\"] = path.basename(file)\n\n        if (this.isWebInstaller) {\n          packager.dispatchArtifactCreated(file, this, arch)\n        }\n      })\n    }\n\n    this.configureDefinesForAllTypeOfInstaller(defines)\n    if (isPortable) {\n      defines.REQUEST_EXECUTION_LEVEL = (options as PortableOptions).requestExecutionLevel || \"user\"\n    }\n    else {\n      await this.configureDefines(oneClick, defines)\n    }\n\n    if (packager.config.compression === \"store\") {\n      commands.SetCompress = \"off\"\n    }\n    else {\n      commands.SetCompressor = \"lzma\"\n      if (!this.isWebInstaller) {\n        defines.COMPRESS = \"auto\"\n      }\n    }\n\n    debug(defines)\n    debug(commands)\n\n    if (packager.packagerOptions.effectiveOptionComputed != null && await packager.packagerOptions.effectiveOptionComputed([defines, commands])) {\n      return\n    }\n\n    const script = isPortable ? await readFile(path.join(nsisTemplatesDir, \"portable.nsi\"), \"utf8\") : await this.computeScriptAndSignUninstaller(defines, commands, installerPath)\n    await this.executeMakensis(defines, commands, await this.computeFinalScript(script, true))\n    await packager.sign(installerPath)\n\n    packager.info.dispatchArtifactCreated({\n      file: installerPath,\n      target: this,\n      packager,\n      arch: this.archs.size === 1 ? this.archs.keys().next().value : null,\n      safeArtifactName: this.generateGitHubInstallerName(),\n      isWriteUpdateInfo: true,\n    })\n  }\n\n  protected generateGitHubInstallerName() {\n    const appInfo = this.packager.appInfo\n    const classifier = appInfo.name.toLowerCase() === appInfo.name ? \"setup-\" : \"Setup-\"\n    return `${appInfo.name}-${this.isPortable ? \"\" : classifier}${appInfo.version}.exe`\n  }\n\n  private get isUnicodeEnabled() {\n    return this.options.unicode == null ? true : this.options.unicode\n  }\n\n  get isWebInstaller(): boolean {\n    return false\n  }\n\n  private async computeScriptAndSignUninstaller(defines: any, commands: any, installerPath: string) {\n    const packager = this.packager\n    const customScriptPath = await packager.getResource(this.options.script, \"installer.nsi\")\n    const script = await readFile(customScriptPath || path.join(nsisTemplatesDir, \"installer.nsi\"), \"utf8\")\n\n    if (customScriptPath != null) {\n      log(\"Custom NSIS script is used - uninstaller is not signed by electron-builder\")\n      return script\n    }\n\n    const uninstallerPath = await\n    packager.getTempFile(\"uninstaller.exe\")\n    const isWin = process.platform === \"win32\"\n    defines.BUILD_UNINSTALLER = null\n    defines.UNINSTALLER_OUT_FILE = isWin ? uninstallerPath : path.win32.join(\"Z:\", uninstallerPath)\n    await this.executeMakensis(defines, commands, await this.computeFinalScript(script, false))\n    await execWine(installerPath, [])\n    await packager.sign(uninstallerPath, \"  Signing NSIS uninstaller\")\n\n    delete defines.BUILD_UNINSTALLER\n    // platform-specific path, not wine\n    defines.UNINSTALLER_OUT_FILE = uninstallerPath\n    return script\n  }\n\n  private computeVersionKey() {\n    // Error: invalid VIProductVersion format, should be X.X.X.X\n    // so, we must strip beta\n    const localeId = this.options.language || \"1033\"\n    const appInfo = this.packager.appInfo\n    const versionKey = [\n      `/LANG=${localeId} ProductName \"${appInfo.productName}\"`,\n      `/LANG=${localeId} ProductVersion \"${appInfo.version}\"`,\n      `/LANG=${localeId} LegalCopyright \"${appInfo.copyright}\"`,\n      `/LANG=${localeId} FileDescription \"${appInfo.description}\"`,\n      `/LANG=${localeId} FileVersion \"${appInfo.buildVersion}\"`,\n    ]\n    use(this.packager.platformSpecificBuildOptions.legalTrademarks, it => versionKey.push(`/LANG=${localeId} LegalTrademarks \"${it}\"`))\n    use(appInfo.companyName, it => versionKey.push(`/LANG=${localeId} CompanyName \"${it}\"`))\n    return versionKey\n  }\n\n  protected async configureDefines(oneClick: boolean, defines: any) {\n    const packager = this.packager\n    const options = this.options\n\n    if (oneClick) {\n      defines.ONE_CLICK = null\n\n      if (options.runAfterFinish !== false) {\n        defines.RUN_AFTER_FINISH = null\n      }\n\n      const installerHeaderIcon = await packager.getResource(options.installerHeaderIcon, \"installerHeaderIcon.ico\")\n      if (installerHeaderIcon != null) {\n        defines.HEADER_ICO = installerHeaderIcon\n      }\n    }\n    else {\n      const installerHeader = await\n      packager.getResource(options.installerHeader, \"installerHeader.bmp\")\n      if (installerHeader != null) {\n        defines.MUI_HEADERIMAGE = null\n        defines.MUI_HEADERIMAGE_RIGHT = null\n        defines.MUI_HEADERIMAGE_BITMAP = installerHeader\n      }\n\n      const bitmap = (await packager.getResource(options.installerSidebar, \"installerSidebar.bmp\")) || \"${NSISDIR}\\\\Contrib\\\\Graphics\\\\Wizard\\\\nsis3-metro.bmp\"\n      defines.MUI_WELCOMEFINISHPAGE_BITMAP = bitmap\n      defines.MUI_UNWELCOMEFINISHPAGE_BITMAP = (await packager.getResource(options.uninstallerSidebar, \"uninstallerSidebar.bmp\")) || bitmap\n\n      if (options.allowElevation !== false) {\n        defines.MULTIUSER_INSTALLMODE_ALLOW_ELEVATION = null\n      }\n    }\n\n    if (options.perMachine === true) {\n      defines.INSTALL_MODE_PER_ALL_USERS = null\n    }\n\n    if (!oneClick || options.perMachine === true) {\n      defines.INSTALL_MODE_PER_ALL_USERS_REQUIRED = null\n    }\n\n    if (options.allowToChangeInstallationDirectory) {\n      if (oneClick) {\n        throw new Error(\"allowToChangeInstallationDirectory makes sense only for assisted installer (please set oneClick to false)\")\n      }\n      defines.allowToChangeInstallationDirectory = null\n    }\n\n    if (options.menuCategory != null && options.menuCategory !== false) {\n      let menu: string\n      if (options.menuCategory === true) {\n        const companyName = packager.appInfo.companyName\n        if (companyName == null) {\n          throw new Error(`Please specify \"author\" in the application package.json — it is required because \"menuCategory\" is set to true.`)\n        }\n        menu = sanitizeFileName(companyName)\n      }\n      else {\n        menu = (options.menuCategory as string).split(/[\\/\\\\]/).map(it => sanitizeFileName(it)).join(\"\\\\\")\n      }\n      if (!isEmptyOrSpaces(menu)) {\n        defines.MENU_FILENAME = menu\n      }\n    }\n\n    defines.SHORTCUT_NAME = isEmptyOrSpaces(options.shortcutName) ? defines.PRODUCT_FILENAME : packager.expandMacro(options.shortcutName!!)\n\n    if (options.multiLanguageInstaller == null ? this.isUnicodeEnabled : options.multiLanguageInstaller) {\n      defines.MULTI_LANGUAGE_INSTALLER = null\n    }\n\n    if (options.deleteAppDataOnUninstall) {\n      defines.DELETE_APP_DATA_ON_UNINSTALL = null\n    }\n\n    const uninstallerIcon = await packager.getResource(options.uninstallerIcon, \"uninstallerIcon.ico\")\n    if (uninstallerIcon != null) {\n      // we don't need to copy MUI_UNICON (defaults to app icon), so, we have 2 defines\n      defines.UNINSTALLER_ICON = uninstallerIcon\n      defines.MUI_UNICON = uninstallerIcon\n    }\n\n    defines.UNINSTALL_DISPLAY_NAME = packager.expandMacro(options.uninstallDisplayName || \"${productName} ${version}\", null, {}, false)\n    if (options.createDesktopShortcut === false) {\n      defines.DO_NOT_CREATE_DESKTOP_SHORTCUT = null\n    }\n  }\n\n  private configureDefinesForAllTypeOfInstaller(defines: any) {\n    const options = this.options\n\n    if (!this.isWebInstaller && defines.APP_BUILD_DIR == null) {\n      if (options.useZip) {\n        defines.ZIP_COMPRESSION = null\n      }\n\n      defines.COMPRESSION_METHOD = options.useZip ? \"zip\" : \"7z\"\n    }\n  }\n\n  private async executeMakensis(defines: any, commands: any, script: string) {\n    const args: Array<string> = (this.options.warningsAsErrors === false) ? [] : [\"-WX\"]\n    for (const name of Object.keys(defines)) {\n      const value = defines[name]\n      if (value == null) {\n        args.push(`-D${name}`)\n      }\n      else {\n        args.push(`-D${name}=${value}`)\n      }\n    }\n\n    for (const name of Object.keys(commands)) {\n      const value = commands[name]\n      if (Array.isArray(value)) {\n        for (const c of value) {\n          args.push(`-X${name} ${c}`)\n        }\n      }\n      else {\n        args.push(`-X${name} ${value}`)\n      }\n    }\n\n    args.push(\"-\")\n\n    if (debug.enabled) {\n      process.stdout.write(\"\\n\\nNSIS script:\\n\\n\" + script + \"\\n\\n---\\nEnd of NSIS script.\\n\\n\")\n    }\n\n    const nsisPath = await nsisPathPromise\n    await new BluebirdPromise<any>((resolve, reject) => {\n      const command = path.join(nsisPath, process.platform === \"darwin\" ? \"mac\" : (process.platform === \"win32\" ? \"Bin\" : \"linux\"), process.platform === \"win32\" ? \"makensis.exe\" : \"makensis\")\n      const childProcess = doSpawn(command, args, {\n        // we use NSIS_CONFIG_CONST_DATA_PATH=no to build makensis on Linux, but in any case it doesn't use stubs as MacOS/Windows version, so, we explicitly set NSISDIR\n        // set LC_CTYPE to avoid crash https://github.com/electron-userland/electron-builder/issues/503 Even \"en_DE.UTF-8\" leads to error.\n        env: {...process.env, NSISDIR: nsisPath, LC_CTYPE: \"en_US.UTF-8\", LANG: \"en_US.UTF-8\"},\n        cwd: nsisTemplatesDir,\n      }, {isPipeInput: true, isDebugEnabled: debug.enabled})\n\n      const timeout = setTimeout(() => childProcess.kill(), 4 * 60 * 1000)\n\n      handleProcess(\"close\", childProcess, command, () => {\n        try {\n          clearTimeout(timeout)\n        }\n        finally {\n          resolve()\n        }\n      }, error => {\n        try {\n          clearTimeout(timeout)\n        }\n        finally {\n          reject(error + \"\\nNSIS script:\\n\" + script)\n        }\n      })\n\n      childProcess.stdin.end(script)\n    })\n  }\n\n  private async computeFinalScript(originalScript: string, isInstaller: boolean) {\n    const packager = this.packager\n\n    const scriptGenerator = new NsisScriptGenerator()\n    scriptGenerator.addIncludeDir(path.join(nsisTemplatesDir, \"include\"))\n    scriptGenerator.flags([\"--updated\", \"--force-run\", \"--keep-shortcuts\", \"--no-desktop-shortcut\", \"--delete-app-data\"])\n\n    const taskManager = new AsyncTaskManager(packager.info.cancellationToken)\n\n    const pluginArch = this.isUnicodeEnabled ? \"x86-unicode\" : \"x86-ansi\"\n\n    taskManager.add(async () => {\n      scriptGenerator.addPluginDir(pluginArch, path.join(await nsisResourcePathPromise, \"plugins\", pluginArch))\n    })\n\n    taskManager.add(async () => {\n      const userPluginDir = path.join(packager.buildResourcesDir, pluginArch)\n      const stat = await statOrNull(userPluginDir)\n      if (stat != null && stat.isDirectory()) {\n        scriptGenerator.addPluginDir(pluginArch, userPluginDir)\n      }\n    })\n\n    // http://stackoverflow.com/questions/997456/nsis-license-file-based-on-language-selection\n    taskManager.add(() => computeLicensePage(packager, this.options, scriptGenerator))\n\n    const isMultiLang = this.isUnicodeEnabled && this.options.multiLanguageInstaller !== false\n    taskManager.addTask(addCustomMessageFileInclude(\"messages.yml\", packager, isMultiLang, scriptGenerator))\n\n    if (!this.isPortable) {\n      if (this.isUnicodeEnabled && this.options.oneClick === false) {\n        taskManager.addTask(addCustomMessageFileInclude(\"assistedMessages.yml\", packager, isMultiLang, scriptGenerator))\n      }\n\n      taskManager.add(async () => {\n        const customInclude = await packager.getResource(this.options.include, \"installer.nsh\")\n        if (customInclude != null) {\n          scriptGenerator.addIncludeDir(packager.buildResourcesDir)\n          scriptGenerator.include(customInclude)\n        }\n      })\n    }\n\n    await taskManager.awaitTasks()\n\n    if (this.isPortable) {\n      return scriptGenerator.build() + originalScript\n    }\n\n    const fileAssociations = packager.fileAssociations\n    if (fileAssociations.length !== 0) {\n      if (this.options.perMachine !== true) {\n        // https://github.com/electron-userland/electron-builder/issues/772\n        throw new Error(`Please set perMachine to true — file associations works on Windows only if installed for all users`)\n      }\n\n      scriptGenerator.include(\"FileAssociation.nsh\")\n      if (isInstaller) {\n        const registerFileAssociationsScript = new NsisScriptGenerator()\n        for (const item of fileAssociations) {\n          const extensions = asArray(item.ext).map(normalizeExt)\n          for (const ext of extensions) {\n            const customIcon = await packager.getResource(getPlatformIconFileName(item.icon, false), `${extensions[0]}.ico`)\n            let installedIconPath = \"$appExe,0\"\n            if (customIcon != null) {\n              installedIconPath = `$INSTDIR\\\\resources\\\\${path.basename(customIcon)}`\n              registerFileAssociationsScript.file(installedIconPath, customIcon)\n            }\n\n            const icon = `\"${installedIconPath}\"`\n            const commandText = `\"Open with ${packager.appInfo.productName}\"`\n            const command = '\"$appExe $\\\\\"%1$\\\\\"\"'\n            registerFileAssociationsScript.insertMacro(\"APP_ASSOCIATE\", `\"${ext}\" \"${item.name || ext}\" \"${item.description || \"\"}\" ${icon} ${commandText} ${command}`)\n          }\n        }\n        scriptGenerator.macro(\"registerFileAssociations\", registerFileAssociationsScript)\n      }\n      else {\n        const unregisterFileAssociationsScript = new NsisScriptGenerator()\n        for (const item of fileAssociations) {\n          for (const ext of asArray(item.ext)) {\n            unregisterFileAssociationsScript.insertMacro(\"APP_UNASSOCIATE\", `\"${normalizeExt(ext)}\" \"${item.name || ext}\"`)\n          }\n        }\n        scriptGenerator.macro(\"unregisterFileAssociations\", unregisterFileAssociationsScript)\n      }\n    }\n\n    return scriptGenerator.build() + originalScript\n  }\n}"]}
