{"version":3,"file":"linuxOptions.js","sourceRoot":"","sources":["../../../../src/options/linuxOptions.ts"],"names":[],"mappings":"","sourcesContent":["import { TargetConfigType, TargetSpecificOptions } from \"../core\"\nimport { PlatformSpecificBuildOptions } from \"../metadata\"\n\nexport interface LinuxBuildOptions extends CommonLinuxOptions, PlatformSpecificBuildOptions {\n  /**\n   * The [package category](https://www.debian.org/doc/debian-policy/ch-controlfields.html#s-f-Section). Not applicable for AppImage.\n   */\n  readonly packageCategory?: string | null\n\n  /**\n   * Target package type: list of `AppImage`, `snap`, `deb`, `rpm`, `freebsd`, `pacman`, `p5p`, `apk`, `7z`, `zip`, `tar.xz`, `tar.lz`, `tar.gz`, `tar.bz2`, `dir`.\n   *\n   * electron-builder [docker image](https://github.com/electron-userland/electron-builder/wiki/Docker) can be used to build Linux targets on any platform. See [Multi platform build](https://github.com/electron-userland/electron-builder/wiki/Multi-Platform-Build).\n   *\n   * @see [Please do not put an AppImage into another archive like a .zip or .tar.gz](https://github.com/probonopd/AppImageKit/wiki/Creating-AppImages#common-mistake)\n   * @default AppImage\n   */\n  readonly target?: TargetConfigType\n\n  /**\n   * The maintainer. Defaults to [author](#Metadata-author).\n   */\n  readonly maintainer?: string | null\n\n  /**\n   * The vendor. Defaults to [author](#Metadata-author).\n   */\n  readonly vendor?: string | null\n\n  /**\n   * @deprecated\n   * @private\n   */\n  readonly depends?: Array<string> | null\n\n  /**\n   * The executable name. Defaults to `productName`.\n   * Cannot be specified per target, allowed only in the `linux`.\n   */\n  readonly executableName?: string | null\n\n  /**\n   * The path to icon set directory, relative to the the [build resources](https://github.com/electron-userland/electron-builder/wiki/Options#MetadataDirectories-buildResources) or to the project directory. The icon filename must contain the size (e.g. 32x32.png) of the icon.\n   * By default will be generated automatically based on the macOS icns file.\n   */\n  readonly icon?: string\n}\n\nexport interface CommonLinuxOptions {\n  /**\n   * The [short description](https://www.debian.org/doc/debian-policy/ch-controlfields.html#s-f-Description).\n   */\n  readonly synopsis?: string | null\n\n  /**\n   * As [description](#Metadata-description) from application package.json, but allows you to specify different for Linux.\n   */\n  readonly description?: string | null\n\n  /**\n   * The [application category](https://specifications.freedesktop.org/menu-spec/latest/apa.html#main-category-registry).\n   */\n  readonly category?: string | null\n  readonly packageCategory?: string | null\n\n  /**\n   * The [Desktop file](https://developer.gnome.org/integration-guide/stable/desktop-files.html.en) entries (name to value).\n   */\n  readonly desktop?: any | null\n\n  readonly vendor?: string | null\n  readonly maintainer?: string | null\n\n  readonly afterInstall?: string | null\n  readonly afterRemove?: string | null\n\n  /**\n   * should be not documented, only to experiment\n   * @private\n   */\n  readonly fpm?: Array<string> | null\n}\n\nexport interface LinuxTargetSpecificOptions extends CommonLinuxOptions, TargetSpecificOptions {\n  /**\n   * Package dependencies.\n   */\n  readonly depends?: Array<string> | null\n\n  readonly icon?: string\n}\n\nexport interface DebOptions extends LinuxTargetSpecificOptions {\n  /**\n   * The compression type.\n   * @default xz\n   */\n  readonly compression?: \"gz\" | \"bzip2\" | \"xz\" | null\n\n  /**\n   * The [Priority](https://www.debian.org/doc/debian-policy/ch-controlfields.html#s-f-Priority) attribute.\n   */\n  readonly priority?: string | null\n\n  /**\n   * Package dependencies. Defaults to `[\"gconf2\", \"gconf-service\", \"libnotify4\", \"libappindicator1\", \"libxtst6\", \"libnss3\"]`.\n   */\n  readonly depends?: Array<string> | null\n}\n\nexport interface SnapOptions extends LinuxBuildOptions {\n  /**\n   * The type of [confinement](https://snapcraft.io/docs/reference/confinement) supported by the snap.\n   * @default strict\n   */\n  readonly confinement?: \"devmode\" | \"strict\" | \"classic\" | null\n\n  /**\n   * The 78 character long summary. Defaults to [productName](#Config-productName).\n   */\n  readonly summary?: string | null\n\n  /**\n   * The quality grade of the snap. It can be either `devel` (i.e. a development version of the snap, so not to be published to the “stable” or “candidate” channels) or “stable” (i.e. a stable release or release candidate, which can be released to all channels).\n   * @default stable\n   */\n  readonly grade?: \"devel\" | \"stable\" | null\n\n  /**\n   * The list of features that must be supported by the core in order for this snap to install.\n   */\n  readonly assumes?: Array<string> | null\n\n  /**\n   * The list of debian packages needs to be installed for building this snap.\n   */\n  readonly buildPackages?: Array<string> | null\n\n  /**\n   * The list of Ubuntu packages to use that are needed to support the `app` part creation. Like `depends` for `deb`.\n   * Defaults to `[\"libnotify4\", \"libappindicator1\", \"libxtst6\", \"libnss3\", \"libxss1\", \"fontconfig-config\", \"gconf2\", \"libasound2\", \"pulseaudio\"]`.\n   *\n   * If list contains `default`, it will be replaced to default list, so, `[\"default\", \"foo\"]` can be used to add custom package `foo` in addition to defaults.\n   */\n  readonly stagePackages?: Array<string> | null\n\n  /**\n   * The list of [plugs](https://snapcraft.io/docs/reference/interfaces).\n   * Defaults to `[\"home\", \"x11\", \"unity7\", \"browser-support\", \"network\", \"gsettings\", \"pulseaudio\", \"opengl\"]`.\n   *\n   * If list contains `default`, it will be replaced to default list, so, `[\"default\", \"foo\"]` can be used to add custom plug `foo` in addition to defaults.\n   */\n  readonly plugs?: Array<string> | null\n\n  /**\n   * Specifies any [parts](https://snapcraft.io/docs/reference/parts) that should be built before this part.\n   * Defaults to `[\"desktop-only\"\"]`.\n   *\n   * If list contains `default`, it will be replaced to default list, so, `[\"default\", \"foo\"]` can be used to add custom parts `foo` in addition to defaults.\n   */\n  readonly after?: Array<string> | null\n\n  /**\n   * Specify `ubuntu-app-platform1` to use [ubuntu-app-platform](https://insights.ubuntu.com/2016/11/17/how-to-create-snap-packages-on-qt-applications/).\n   * Snap size will be greatly reduced, but it is not recommended for now because \"the snaps must be connected before running uitk-gallery for the first time\".\n   */\n  readonly ubuntuAppPlatformContent?: string | null\n}"]}
