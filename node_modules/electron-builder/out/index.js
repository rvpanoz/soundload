"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _packager;

function _load_packager() {
  return _packager = require("./packager");
}

Object.defineProperty(exports, "Packager", {
  enumerable: true,
  get: function () {
    return (_packager || _load_packager()).Packager;
  }
});

var _core;

function _load_core() {
  return _core = require("./core");
}

Object.defineProperty(exports, "Platform", {
  enumerable: true,
  get: function () {
    return (_core || _load_core()).Platform;
  }
});
Object.defineProperty(exports, "Target", {
  enumerable: true,
  get: function () {
    return (_core || _load_core()).Target;
  }
});
Object.defineProperty(exports, "DIR_TARGET", {
  enumerable: true,
  get: function () {
    return (_core || _load_core()).DIR_TARGET;
  }
});

var _electronBuilderUtil;

function _load_electronBuilderUtil() {
  return _electronBuilderUtil = require("electron-builder-util");
}

Object.defineProperty(exports, "getArchSuffix", {
  enumerable: true,
  get: function () {
    return (_electronBuilderUtil || _load_electronBuilderUtil()).getArchSuffix;
  }
});
Object.defineProperty(exports, "Arch", {
  enumerable: true,
  get: function () {
    return (_electronBuilderUtil || _load_electronBuilderUtil()).Arch;
  }
});
Object.defineProperty(exports, "archFromString", {
  enumerable: true,
  get: function () {
    return (_electronBuilderUtil || _load_electronBuilderUtil()).archFromString;
  }
});

var _builder;

function _load_builder() {
  return _builder = require("./builder");
}

Object.defineProperty(exports, "build", {
  enumerable: true,
  get: function () {
    return (_builder || _load_builder()).build;
  }
});
Object.defineProperty(exports, "createTargets", {
  enumerable: true,
  get: function () {
    return (_builder || _load_builder()).createTargets;
  }
});

var _forgeMaker;

function _load_forgeMaker() {
  return _forgeMaker = require("./forge/forge-maker");
}

Object.defineProperty(exports, "buildForge", {
  enumerable: true,
  get: function () {
    return (_forgeMaker || _load_forgeMaker()).buildForge;
  }
});