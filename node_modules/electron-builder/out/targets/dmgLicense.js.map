{"version":3,"file":"dmgLicense.js","sourceRoot":"","sources":["../../src/targets/dmgLicense.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAMA,AAAgB,AAChB,AAAM;;oEAAC,AAAK,WAA0B,AAA+B,UAAE,AAAe;AACpF,AAA+B;AAC/B,cAAM,AAAY,eAAG,MAAM,AAAe,mDAAC,AAAQ,AAAC;AACpD,AAAE,AAAC,YAAC,AAAY,aAAC,AAAM,WAAK,AAAC,AAAC,GAAC,AAAC;AAC9B,AAAM,AACR;AAAC;AAED,AAAE,AAAC,YAAC,AAAK,4DAAC,AAAO,AAAC,SAAC,AAAC;AAClB,AAAK,AAAC,+FAAkB,AAAY,aAAC,AAAI,KAAC,AAAG,AAAC,IAAE,AAAC,AACnD;AAAC;AAED,YAAI,AAAI,OAAG,MAAM,AAAQ,8CAAC,AAAI,MAAC,AAAI,KAAC,AAAS,WAAE,AAAI,MAAE,AAAI,MAAE,AAAW,aAAE,AAAK,OAAE,AAAa,AAAC,gBAAE,AAAM,AAAC;AACtG,YAAI,AAAO,UAAG,AAAI;AAClB,AAAG,AAAC,aAAC,MAAM,AAAI,QAAI,AAAY,AAAC,cAAC,AAAC;AAChC,kBAAM,AAAI,OAAG,AAAI,KAAC,AAAI,KAAC,AAAW,AAAE,cAAC,AAAQ,SAAC,AAAM,AAAC,UAAG,AAAK,QAAG,AAAM;AACtE,AAAI,AAAI,6BAAS,AAAI,UAAM,AAAO,aAAM,AAAI,KAAC,AAAQ,QAAY;AAEjE,kBAAM,AAAG,MAAG,CAAC,MAAM,AAAQ,8CAAC,AAAI,KAAC,AAAI,AAAC,AAAC,OAAC,AAAQ,SAAC,AAAK,AAAC,OAAC,AAAW,AAAE;AACrE,AAAG,AAAC,iBAAC,IAAI,AAAC,IAAG,AAAC,GAAE,AAAC,IAAG,AAAG,IAAC,AAAM,QAAE,AAAC,KAAI,AAAE,IAAE,AAAC;AACxC,AAAI,wBAAI,AAAI,OAAG,AAAG,IAAC,AAAS,UAAC,AAAC,GAAE,AAAI,KAAC,AAAG,IAAC,AAAC,IAAG,AAAE,IAAE,AAAG,IAAC,AAAM,AAAC,AAAC,WAAG,AAAK,AACvE;AAAC;AAED,AAAI,oBAAI,AAAQ;AAChB,AAAuC;AACvC,AAAI,AAAI,oCAAgB,AAAO,aAAM,AAAI,KAAC,AAAQ,QAKnD;;;;;;AAEC,AAAO,AAAE,AACX;AAAC;AAED,cAAM,AAAQ,WAAG,MAAM,AAAQ,SAAC,AAAW,YAAC,AAAI,AAAC;AACjD,cAAM,AAAS,+CAAC,AAAQ,UAAE,AAAI,AAAC;AAC/B,cAAM,AAAI,gEAAC,AAAS,WAAE,CAAC,AAAW,aAAE,AAAO,AAAC,AAAC;AAC7C,cAAM,AAAI,gEAAC,AAAK,OAAE,CAAC,AAAI,MAAE,AAAQ,UAAE,AAAI,MAAE,AAAO,AAAC,AAAC;AAClD,cAAM,AAAI,gEAAC,AAAS,WAAE,CAAC,AAAS,WAAE,AAAO,AAAC,AAAC,AAC7C;AAAC;;;;;;;;;;;AA9CD,AAAO,AAAE,AAAK,AAAE,AAAI,AAAE,AAAM,AAAuB;;;;;;AACnD,AAAO,AAAE,AAAQ,AAAE,AAAS,AAAE,AAAM,AAAY;;;;AAChD,AAAO,AAAK,AAAI,AAAM,AAAM;;;;AAE5B,AAAO,AAAE,AAAe,AAAE,AAAM,AAAW","sourcesContent":["import { debug, exec } from \"electron-builder-util\"\nimport { readFile, writeFile } from \"fs-extra-p\"\nimport * as path from \"path\"\nimport { PlatformPackager } from \"../platformPackager\"\nimport { getLicenseFiles } from \"./license\"\n\n/** @internal */\nexport async function addLicenseToDmg(packager: PlatformPackager<any>, dmgPath: string) {\n  // http://www.owsiak.org/?p=700\n  const licenseFiles = await getLicenseFiles(packager)\n  if (licenseFiles.length === 0) {\n    return\n  }\n\n  if (debug.enabled) {\n    debug(`License files: ${licenseFiles.join(\" \")}`)\n  }\n\n  let data = await readFile(path.join(__dirname, \"..\", \"..\", \"templates\", \"dmg\", \"license.txt\"), \"utf8\")\n  let counter = 5000\n  for (const item of licenseFiles) {\n    const kind = item.file.toLowerCase().endsWith(\".rtf\") ? \"RTF\" : \"TEXT\"\n    data += `data '${kind}' (${counter}, \"${item.langName} SLA\") {\\n`\n\n    const hex = (await readFile(item.file)).toString(\"hex\").toUpperCase()\n    for (let i = 0; i < hex.length; i += 32) {\n      data += '$\"' + hex.substring(i, Math.min(i + 32, hex.length)) + '\"\\n'\n    }\n\n    data += \"};\\n\\n\"\n    // noinspection SpellCheckingInspection\n    data += `data 'styl' (${counter}, \"${item.langName} SLA\") {\n  $\"0003 0000 0000 000C 0009 0014 0000 0000\"\n  $\"0000 0000 0000 0000 0027 000C 0009 0014\"\n  $\"0100 0000 0000 0000 0000 0000 002A 000C\"\n  $\"0009 0014 0000 0000 0000 0000 0000\"\n};`\n\n    counter++\n  }\n\n  const tempFile = await packager.getTempFile(\".r\")\n  await writeFile(tempFile, data)\n  await exec(\"hdiutil\", [\"unflatten\", dmgPath])\n  await exec(\"Rez\", [\"-a\", tempFile, \"-o\", dmgPath])\n  await exec(\"hdiutil\", [\"flatten\", dmgPath])\n}"]}
