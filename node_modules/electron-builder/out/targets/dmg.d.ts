import { Arch } from "electron-builder-util";
import { Target } from "../core";
import { DmgOptions, MacOptions } from "../options/macOptions";
import { PlatformPackager } from "../platformPackager";
export declare class DmgTarget extends Target {
    private readonly packager;
    readonly outDir: string;
    readonly options: DmgOptions;
    private helperDir;
    constructor(packager: PlatformPackager<MacOptions>, outDir: string);
    build(appPath: string, arch: Arch): Promise<void>;
    computeVolumeName(custom?: string | null): string;
    computeDmgOptions(): Promise<DmgOptions>;
}
export declare function attachAndExecute(dmgPath: string, readWrite: boolean, task: () => Promise<any>): Promise<any>;
