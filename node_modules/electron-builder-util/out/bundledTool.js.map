{"version":3,"file":"bundledTool.js","sourceRoot":"","sources":["../src/bundledTool.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,AAAO,AAAE,AAAgB,AAAE,AAAM,AAAe;;;;AAEhD,AAAY,AACZ,AAAM;AAAC,MAAM,AAAY,sCAAG,EAAC,AAAO,SAAE,AAAG,MAAG,AAAI,AAAC,AAOjD,AAAM;oBAAqB,AAAmC,UAAE,AAAwB;AACtF,UAAM,AAAc,iBAAG,AAAQ,WAAG,AAAQ,SAAC,AAAK,MAAC,AAAG,AAAC,OAAG,AAAE;AAC1D,AAAM,WAAC,AAAS,UAAC,AAAM,OAAC,AAAc,AAAC,gBAAC,AAAM,OAAC,AAAE,MAAI,AAAE,GAAC,AAAM,SAAG,AAAC,AAAC,GAAC,AAAI,KAAC,AAAG,AAAC,AAC/E;AAAC,AAED,AAAM;wBAAyB,AAAsB;AACnD,AAAuC;AACvC,AAAM,6BACD,AAAO,QAAC,AAAG,OACd,AAAiB,mBAAE,AAAU,WAAC,AAAO,QAAC,AAAG,IAAC,AAAiB,mBAAE,AAAO,AAAC,AACtE,AACH;AAAC,AAED,AAAM;;AACJ,AAAsC;AACtC,AAAM,WAAC,AAAgB,4DAAC,AAAa,eAAE,AAAW,aAAE,AAA0F,AAAC,AACjJ;AAAC","sourcesContent":["import { getBinFromGithub } from \"./binDownload\"\n\n// 2 minutes\nexport const EXEC_TIMEOUT = {timeout: 120 * 1000}\n\nexport interface ToolInfo {\n  path: string\n  env?: any\n}\n\nexport function computeEnv(oldValue: string | null | undefined, newValues: Array<string>): string {\n  const parsedOldValue = oldValue ? oldValue.split(\":\") : []\n  return newValues.concat(parsedOldValue).filter(it => it.length > 0).join(\":\")\n}\n\nexport function computeToolEnv(libPath: Array<string>): any {\n  // noinspection SpellCheckingInspection\n  return {\n    ...process.env,\n    DYLD_LIBRARY_PATH: computeEnv(process.env.DYLD_LIBRARY_PATH, libPath)\n  }\n}\n\nexport function getLinuxToolsPath() {\n  //noinspection SpellCheckingInspection\n  return getBinFromGithub(\"linux-tools\", \"mac-10.12\", \"DowDogHsS6X4a5au4r8T8qYprf7hqjfzcU7DL5oiD43jhZMfkQOjmFFYC1s7Lp9ARXp+sm8OJhuwaqCHMVGZYg==\")\n}"]}
